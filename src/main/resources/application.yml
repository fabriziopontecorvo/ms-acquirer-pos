spring:
  cloud:
    config:
      allowOverride: true
      overrideNone: true
      overrideSystemProperties: false
  application:
    name: ms-acquirer-pos
  cache:
    redis:
      time-to-live: 300000
    type: redis
    cache-names: "ms-acquirer-pos"
  main:
    allow-bean-definition-overriding: true
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
  kafka:
    bootstrap-servers: 'localhost:9092'
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            add:
              type:
                headers: false
  redis:
    sentinel:
      master: 'redis-master'
      nodes: 'localhost:26379'

kafka:
  topic:
    operation:
      executed:
        pos:
          name: "operation.executed"
    limit:
      not-satisfied:
        name: 'limit.not.satisfied'


rest-client:
  timeout:
    read: 15
    connection: 15
    decidir:
      read: 15000
      connection: 15000
  retry:
    max-attempts: 3
    backoff-initial-interval: 500
    backoff-max-interval: 500
    backoff-multiplier: 1


redis:
  operation:
    lock:
      ttl: 30
    used-qr:
      ttl: 300

micro-services:
  account:
    url: ${ms-accounts.url}
  acquirer-benefits:
    url: ${acquirer-benefits.url}
  limit:
    url: ${limits.url}
  payment-method:
    url: ${payment-methods.url}
  adquirente-persistence:
    url: ${adquirente-persistence.url}
  decidir:
    apikey:
      tp: '0404ba2d30f14a9498a99045a0c0451f'

decidir:
  lapos:
    url: https://developers.decidir.com/api
    path:
      payment: /transactor/payments/qr

commons:
  security:
    tenants:
      - tp
      - bimo
    oauth2:
      resource-server:
        issuer-uri: ${ms-oauth2.issuer-url}/tenants/{tenant}
        introspection-uri: ${ms-oauth2.url}/tenants/{tenant}/oauth2/introspect
        client-id: acme
        client-secret: acmesecret
        legacy:
          introspection-uri: ${oauth.url}/check_token
          client-id: acme
          client-secret: acmesecret
      authorities:
        trusted-application: "ROLE_TRUSTED_APPLICATION"
  tenant:
    factory:
      enabled: true
      allow-unknown-tenants: false
    holder:
      enabled: true
    data:
      known-tenants:
        - id: "bimo"
        - id: "tp"
    config:
      all:
        feature:
          limit-validation:
            enabled: true
      bimo:
        feature:
          limit-validation:
            enabled: true
      tp:
        feature:
          limit-validation:
            enabled: true
  rest:
    tenant-support:
      enabled: true
    http:
      body-format:
        enabled: true
        date-time-format: "yyyy-MM-dd'T'HH:mm:ss"
        naming-strategy: "snake_case"
      request:
        multi-read:
          enabled: true
          url-patterns:
            - "*"
  storage:
    repositories:
      - name: "Transactions"
        connections:
          - tenant: "TP"
            url: ${datasource.transactions.url}
            username: ${datasource.transactions.username}
            password: ${datasource.transactions.password}
            driver: com.microsoft.sqlserver.jdbc.SQLServerDriver
          - tenant: "BIMO"
            url: ${datasource.transactions.url}
            username: ${datasource.transactions.username}
            password: ${datasource.transactions.password}
            driver: com.microsoft.sqlserver.jdbc.SQLServerDriver
    default-repository: "Transactions"
    bean-generation:
      default-repository:
        data-source: true
        template-strategy: named_parameter
      per-connection:
        data-source: true
        template-strategy: named_parameter
  cache:
    redis:
      tenant:
        tp:
          database: 0
          sentinel:
            master: redis-master
            nodes: localhost:26379,localhost:26380,localhost:26381
        bimo:
          database: 1
          sentinel:
            master: redis-master
            nodes: localhost:26379,localhost:26380,localhost:26381
management:
  health:
    redis:
      enabled: false

datasource:
  sql-server:
    messages:
      query-timeout: 30
      jdbcUrl: ${datasource.ms.messages.url}
      username: ${datasource.ms.messages.username}
      password: ${datasource.ms.messages.password}
      driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
      type: com.zaxxer.hikari.HikariDataSource
      validationQuery: SELECT 1
      hikari:
        connection-timeout: 30000

messages:
  converter:
    default:
      channel: 25
